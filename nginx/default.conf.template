server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;

    # Found this solution for serving up an Angular app where we want to make
    # sure index.html is not cached by browsers. The solution also uses try_files,
    # which we were not using before, which makes it nicer for users because a URL
    # like "http://<host>/logs" will actually respond with index.html and Angular
    # will start on the Logs page. Previously this would have resulted in a 404.
    #
    # Note that I moved the root directive to the server level so that it is
    # not repeated for the three location directives.
    #
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#location
    # https://stackoverflow.com/questions/41631399/disable-caching-of-a-single-file-with-try-files-directive

    root /usr/share/nginx/html;

    location = / {
        add_header Cache-Control no-cache;
        expires 0;
        try_files /index.html =404;
    }

    location / {
        try_files $uri @index;
    }

    location @index {
        add_header Cache-Control no-cache;
        expires 0;
        try_files /index.html =404;
    }

    # proxy endpoints that begin with this to mbtest
    location /api/ {
        # If nginx fails to start with the error: unknown "mbtest_url" variable
        # it is because an environment variable MBTEST_URL must exist
        #
        # Would like to use an nginx var here to supply a default but...
        # proxy_pass doesn't allow variables
        proxy_pass ${MBTEST_URL};
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
